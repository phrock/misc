--- src/tilda_window.c	2008-01-18 06:07:39.000000000 +0800
+++ src/tilda_window.c	2010-07-15 21:56:02.000000000 +0800
@@ -56,7 +56,7 @@
 }
 
 
-static tilda_term* find_tt_in_g_list (tilda_window *tw, gint pos)
+tilda_term* find_tt_in_g_list (tilda_window *tw, gint pos)
 {
     DEBUG_FUNCTION ("find_tt_in_g_list");
     DEBUG_ASSERT (tw != NULL);
@@ -114,6 +114,57 @@
     return 0;
 }
 
+static gint full_screen_window (tilda_window *tw)
+{
+	static gint s_w = 0;
+	static gint s_h = 0;
+	static gint s_is_full = FALSE;
+
+	gint w, h, sw, sh;
+	GdkScreen* screen;
+	screen = gdk_screen_get_default();
+	sw = gdk_screen_get_width(screen);
+	sh = gdk_screen_get_height(screen);
+	gtk_window_get_size(GTK_WINDOW(tw->window), &w, &h);
+
+	if (s_is_full) {
+		s_is_full = FALSE;
+		gtk_window_resize(GTK_WINDOW(tw->window), s_w, s_h);
+	} else {
+		s_is_full = TRUE;
+		s_w = w;
+		s_h = h;
+		gtk_window_resize (GTK_WINDOW(tw->window), sw, sh);
+	}
+	return TRUE;
+}
+
+static gint zoom_up_window (tilda_window *tw)
+{
+	gint w, h, sw, sh;
+	GdkScreen* screen;
+	screen = gdk_screen_get_default();
+	sw = gdk_screen_get_width(screen);
+	sh = gdk_screen_get_height(screen);
+	gtk_window_get_size(GTK_WINDOW(tw->window), &w, &h);
+	h += 10;
+	if ( h > sh)
+		h = sh;
+	gtk_window_resize (GTK_WINDOW(tw->window), w, h);
+	return TRUE;
+}
+
+static gint zoom_down_window (tilda_window *tw)
+{
+	gint w, h;
+	gtk_window_get_size(GTK_WINDOW(tw->window), &w, &h);
+	h -= 10;
+	if ( h < 20)
+		h = 20;
+	gtk_window_resize (GTK_WINDOW(tw->window), w, h);
+	return TRUE;
+}
+
 static gint next_tab (tilda_window *tw)
 {
     DEBUG_FUNCTION ("next_tab");
@@ -266,58 +317,70 @@
     gtk_accel_group_connect (accel_group, 'q', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
 
     /* Go to Next Tab on <Ctrl>Page_Down */
-    temp = g_cclosure_new_swap (G_CALLBACK(next_tab), tw, NULL);
-    gtk_accel_group_connect (accel_group, GDK_Page_Down, GDK_CONTROL_MASK, GTK_ACCEL_VISIBLE, temp);
+	//temp = g_cclosure_new_swap (G_CALLBACK(next_tab), tw, NULL);
+	//gtk_accel_group_connect (accel_group, GDK_Page_Down, GDK_CONTROL_MASK, GTK_ACCEL_VISIBLE, temp);
 
     /* Go to Prev Tab on <Ctrl>Page_Up */
-    temp = g_cclosure_new_swap (G_CALLBACK(prev_tab), tw, NULL);
-    gtk_accel_group_connect (accel_group, GDK_Page_Up, GDK_CONTROL_MASK, GTK_ACCEL_VISIBLE, temp);
+	//temp = g_cclosure_new_swap (G_CALLBACK(prev_tab), tw, NULL);
+	//gtk_accel_group_connect (accel_group, GDK_Page_Up, GDK_CONTROL_MASK, GTK_ACCEL_VISIBLE, temp);
 
     /* Add New Tab on <Ctrl><Shift>t */
-    temp = g_cclosure_new_swap (G_CALLBACK(tilda_window_add_tab), tw, NULL);
-    gtk_accel_group_connect (accel_group, 't', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
+	//temp = g_cclosure_new_swap (G_CALLBACK(tilda_window_add_tab), tw, NULL);
+	//gtk_accel_group_connect (accel_group, 't', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
 
     /* Close Current Tab on <Ctrl><Shift>w */
-    temp = g_cclosure_new_swap (G_CALLBACK(tilda_window_close_current_tab), tw, NULL);
-    gtk_accel_group_connect (accel_group, 'w', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
+	//temp = g_cclosure_new_swap (G_CALLBACK(tilda_window_close_current_tab), tw, NULL);
+	//gtk_accel_group_connect (accel_group, 'w', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
 
     /* Goto Tab # */
     /* Know a better way? Then you do. */
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_1), tw, NULL);
-    gtk_accel_group_connect (accel_group, '1', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_1), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '1', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_2), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '2', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_3), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '3', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_4), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '4', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_2), tw, NULL);
-    gtk_accel_group_connect (accel_group, '2', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_5), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '5', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_3), tw, NULL);
-    gtk_accel_group_connect (accel_group, '3', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_6), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '6', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_4), tw, NULL);
-    gtk_accel_group_connect (accel_group, '4', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_7), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '7', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_5), tw, NULL);
-    gtk_accel_group_connect (accel_group, '5', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_8), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '8', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_6), tw, NULL);
-    gtk_accel_group_connect (accel_group, '6', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_9), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '9', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_7), tw, NULL);
-    gtk_accel_group_connect (accel_group, '7', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_10), tw, NULL);
+    //gtk_accel_group_connect (accel_group, '0', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_8), tw, NULL);
-    gtk_accel_group_connect (accel_group, '8', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(ccopy), tw, NULL);
+    //gtk_accel_group_connect (accel_group, 'c', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_9), tw, NULL);
-    gtk_accel_group_connect (accel_group, '9', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    //temp = g_cclosure_new_swap (G_CALLBACK(cpaste), tw, NULL);
+    //gtk_accel_group_connect (accel_group, 'v', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(goto_tab_10), tw, NULL);
-    gtk_accel_group_connect (accel_group, '0', GDK_MOD1_MASK, GTK_ACCEL_VISIBLE, temp);
+    /* zoom up window */
+    temp = g_cclosure_new_swap (G_CALLBACK(zoom_down_window), tw, NULL);
+    gtk_accel_group_connect (accel_group, GDK_Up, GDK_CONTROL_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(ccopy), tw, NULL);
-    gtk_accel_group_connect (accel_group, 'c', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
+    /* zoom down window */
+    temp = g_cclosure_new_swap (G_CALLBACK(zoom_up_window), tw, NULL);
+    gtk_accel_group_connect (accel_group, GDK_Down, GDK_CONTROL_MASK, GTK_ACCEL_VISIBLE, temp);
 
-    temp = g_cclosure_new_swap (G_CALLBACK(cpaste), tw, NULL);
-    gtk_accel_group_connect (accel_group, 'v', GDK_CONTROL_MASK | GDK_SHIFT_MASK, GTK_ACCEL_VISIBLE, temp);
+    /* zoom down window */
+    temp = g_cclosure_new_swap (G_CALLBACK(full_screen_window), tw, NULL);
+    gtk_accel_group_connect (accel_group, GDK_F11, 0, GTK_ACCEL_VISIBLE, temp);
 
     return 0;
 }
