# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# vim: set ts=8 sts=8 sw=8:


pkgdatadir = $(datadir)/tilda
pkglibdir = $(libdir)/tilda
pkgincludedir = $(includedir)/tilda
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = tilda$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	key_converter.c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/tilda-config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_tilda_OBJECTS = tilda-callback_func.$(OBJEXT) \
	tilda-configsys.$(OBJEXT) tilda-eggaccelerators.$(OBJEXT) \
	tilda-key_converter.$(OBJEXT) tilda-key_grabber.$(OBJEXT) \
	tilda-tilda.$(OBJEXT) tilda-tilda_terminal.$(OBJEXT) \
	tilda-tilda_window.$(OBJEXT) tilda-tomboykeybinder.$(OBJEXT) \
	tilda-wizard.$(OBJEXT) tilda-xerror.$(OBJEXT)
tilda_OBJECTS = $(am_tilda_OBJECTS)
am__DEPENDENCIES_1 =
tilda_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
tilda_LINK = $(CCLD) $(tilda_CFLAGS) $(CFLAGS) $(tilda_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
SOURCES = $(tilda_SOURCES)
DIST_SOURCES = $(tilda_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/Aphrodite/Downloads/tilda-0.9.6/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/Aphrodite/Downloads/tilda-0.9.6/missing --run tar
AUTOCONF = ${SHELL} /home/Aphrodite/Downloads/tilda-0.9.6/missing --run autoconf
AUTOHEADER = ${SHELL} /home/Aphrodite/Downloads/tilda-0.9.6/missing --run autoheader
AUTOMAKE = ${SHELL} /home/Aphrodite/Downloads/tilda-0.9.6/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo

# Define a C macro LOCALEDIR indicating where catalogs 
# will be installed.
#localedir = $(datadir)/locale
DEFS = -DLOCALEDIR=\"$(localedir)\" -DDATADIR=\"$(datadir)\" -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTHREAD_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTK_LIBS = -pthread -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lcairo -lgio-2.0 -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBCONFUSE_CFLAGS =  
LIBCONFUSE_LIBS = -lconfuse  
LIBGLADE_CFLAGS = -pthread -I/usr/include/libglade-2.0 -I/usr/include/gtk-2.0 -I/usr/include/libxml2 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
LIBGLADE_LIBS = -pthread -lglade-2.0 -lgtk-x11-2.0 -lxml2 -lgdk-x11-2.0 -latk-1.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lcairo -lgio-2.0 -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/Aphrodite/Downloads/tilda-0.9.6/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = tilda
PACKAGE_BUGREPORT = http://bugs.launchpad.net/tilda
PACKAGE_NAME = Tilda
PACKAGE_STRING = Tilda 0.9.6
PACKAGE_TARNAME = tilda
PACKAGE_VERSION = 0.9.6
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POSUB = po
POW_LIB = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = yes
VERSION = 0.9.6
VTE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pango-1.0 -I/usr/include/gtk-2.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
VTE_LIBS = -pthread -lvte -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lfreetype -lfontconfig -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lcairo -lX11  
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XMKMF = 
abs_builddir = /home/Aphrodite/Downloads/tilda-0.9.6/src
abs_srcdir = /home/Aphrodite/Downloads/tilda-0.9.6/src
abs_top_builddir = /home/Aphrodite/Downloads/tilda-0.9.6
abs_top_srcdir = /home/Aphrodite/Downloads/tilda-0.9.6
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/Aphrodite/Downloads/tilda-0.9.6/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/Aphrodite/Install/tilda
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = gnu

# Keep the headers here so that make dist-bzip2 works
tilda_SOURCES = callback_func.h callback_func.c \
		configsys.h configsys.c \
		debug.h \
		eggaccelerators.h eggaccelerators.c \
		gettext.h \
		key_converter.h key_converter.l \
		key_grabber.h key_grabber.c \
		tilda.h tilda.c \
		tilda_terminal.h tilda_terminal.c \
		tilda_window.h tilda_window.c \
		tomboykeybinder.h tomboykeybinder.c \
		translation.h \
		wizard.h wizard.c \
		xerror.h xerror.c

tilda_CFLAGS = $(AM_CFLAGS) \
		$(GTK_CFLAGS) \
		$(GTHREAD_CFLAGS) \
		$(LIBGLADE_CFLAGS) \
		$(VTE_CFLAGS) \
		$(LIBCONFUSE_CFLAGS)

tilda_LDFLAGS = $(AM_LDFLAGS) \
		$(GTK_LDFLAGS) \
		$(GTHREAD_LDFLAGS) \
		$(LIBGLADE_LDFLAGS) \
		$(VTE_LDFLAGS) \
		$(LIBCONFUSE_LDFLAGS)

tilda_LDADD = $(AM_LDADD) \
		$(GTK_LIBS) \
		$(GTHREAD_LIBS) \
		$(LIBGLADE_LIBS) \
		$(VTE_LIBS) \
		$(LIBCONFUSE_LIBS) \
		$(LTLIBINTL) \
		$(LEXLIB)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .l .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
tilda$(EXEEXT): $(tilda_OBJECTS) $(tilda_DEPENDENCIES) 
	@rm -f tilda$(EXEEXT)
	$(tilda_LINK) $(tilda_OBJECTS) $(tilda_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/tilda-callback_func.Po
include ./$(DEPDIR)/tilda-configsys.Po
include ./$(DEPDIR)/tilda-eggaccelerators.Po
include ./$(DEPDIR)/tilda-key_converter.Po
include ./$(DEPDIR)/tilda-key_grabber.Po
include ./$(DEPDIR)/tilda-tilda.Po
include ./$(DEPDIR)/tilda-tilda_terminal.Po
include ./$(DEPDIR)/tilda-tilda_window.Po
include ./$(DEPDIR)/tilda-tomboykeybinder.Po
include ./$(DEPDIR)/tilda-wizard.Po
include ./$(DEPDIR)/tilda-xerror.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

tilda-callback_func.o: callback_func.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-callback_func.o -MD -MP -MF $(DEPDIR)/tilda-callback_func.Tpo -c -o tilda-callback_func.o `test -f 'callback_func.c' || echo '$(srcdir)/'`callback_func.c
	mv -f $(DEPDIR)/tilda-callback_func.Tpo $(DEPDIR)/tilda-callback_func.Po
#	source='callback_func.c' object='tilda-callback_func.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-callback_func.o `test -f 'callback_func.c' || echo '$(srcdir)/'`callback_func.c

tilda-callback_func.obj: callback_func.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-callback_func.obj -MD -MP -MF $(DEPDIR)/tilda-callback_func.Tpo -c -o tilda-callback_func.obj `if test -f 'callback_func.c'; then $(CYGPATH_W) 'callback_func.c'; else $(CYGPATH_W) '$(srcdir)/callback_func.c'; fi`
	mv -f $(DEPDIR)/tilda-callback_func.Tpo $(DEPDIR)/tilda-callback_func.Po
#	source='callback_func.c' object='tilda-callback_func.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-callback_func.obj `if test -f 'callback_func.c'; then $(CYGPATH_W) 'callback_func.c'; else $(CYGPATH_W) '$(srcdir)/callback_func.c'; fi`

tilda-configsys.o: configsys.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-configsys.o -MD -MP -MF $(DEPDIR)/tilda-configsys.Tpo -c -o tilda-configsys.o `test -f 'configsys.c' || echo '$(srcdir)/'`configsys.c
	mv -f $(DEPDIR)/tilda-configsys.Tpo $(DEPDIR)/tilda-configsys.Po
#	source='configsys.c' object='tilda-configsys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-configsys.o `test -f 'configsys.c' || echo '$(srcdir)/'`configsys.c

tilda-configsys.obj: configsys.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-configsys.obj -MD -MP -MF $(DEPDIR)/tilda-configsys.Tpo -c -o tilda-configsys.obj `if test -f 'configsys.c'; then $(CYGPATH_W) 'configsys.c'; else $(CYGPATH_W) '$(srcdir)/configsys.c'; fi`
	mv -f $(DEPDIR)/tilda-configsys.Tpo $(DEPDIR)/tilda-configsys.Po
#	source='configsys.c' object='tilda-configsys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-configsys.obj `if test -f 'configsys.c'; then $(CYGPATH_W) 'configsys.c'; else $(CYGPATH_W) '$(srcdir)/configsys.c'; fi`

tilda-eggaccelerators.o: eggaccelerators.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-eggaccelerators.o -MD -MP -MF $(DEPDIR)/tilda-eggaccelerators.Tpo -c -o tilda-eggaccelerators.o `test -f 'eggaccelerators.c' || echo '$(srcdir)/'`eggaccelerators.c
	mv -f $(DEPDIR)/tilda-eggaccelerators.Tpo $(DEPDIR)/tilda-eggaccelerators.Po
#	source='eggaccelerators.c' object='tilda-eggaccelerators.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-eggaccelerators.o `test -f 'eggaccelerators.c' || echo '$(srcdir)/'`eggaccelerators.c

tilda-eggaccelerators.obj: eggaccelerators.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-eggaccelerators.obj -MD -MP -MF $(DEPDIR)/tilda-eggaccelerators.Tpo -c -o tilda-eggaccelerators.obj `if test -f 'eggaccelerators.c'; then $(CYGPATH_W) 'eggaccelerators.c'; else $(CYGPATH_W) '$(srcdir)/eggaccelerators.c'; fi`
	mv -f $(DEPDIR)/tilda-eggaccelerators.Tpo $(DEPDIR)/tilda-eggaccelerators.Po
#	source='eggaccelerators.c' object='tilda-eggaccelerators.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-eggaccelerators.obj `if test -f 'eggaccelerators.c'; then $(CYGPATH_W) 'eggaccelerators.c'; else $(CYGPATH_W) '$(srcdir)/eggaccelerators.c'; fi`

tilda-key_converter.o: key_converter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-key_converter.o -MD -MP -MF $(DEPDIR)/tilda-key_converter.Tpo -c -o tilda-key_converter.o `test -f 'key_converter.c' || echo '$(srcdir)/'`key_converter.c
	mv -f $(DEPDIR)/tilda-key_converter.Tpo $(DEPDIR)/tilda-key_converter.Po
#	source='key_converter.c' object='tilda-key_converter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-key_converter.o `test -f 'key_converter.c' || echo '$(srcdir)/'`key_converter.c

tilda-key_converter.obj: key_converter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-key_converter.obj -MD -MP -MF $(DEPDIR)/tilda-key_converter.Tpo -c -o tilda-key_converter.obj `if test -f 'key_converter.c'; then $(CYGPATH_W) 'key_converter.c'; else $(CYGPATH_W) '$(srcdir)/key_converter.c'; fi`
	mv -f $(DEPDIR)/tilda-key_converter.Tpo $(DEPDIR)/tilda-key_converter.Po
#	source='key_converter.c' object='tilda-key_converter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-key_converter.obj `if test -f 'key_converter.c'; then $(CYGPATH_W) 'key_converter.c'; else $(CYGPATH_W) '$(srcdir)/key_converter.c'; fi`

tilda-key_grabber.o: key_grabber.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-key_grabber.o -MD -MP -MF $(DEPDIR)/tilda-key_grabber.Tpo -c -o tilda-key_grabber.o `test -f 'key_grabber.c' || echo '$(srcdir)/'`key_grabber.c
	mv -f $(DEPDIR)/tilda-key_grabber.Tpo $(DEPDIR)/tilda-key_grabber.Po
#	source='key_grabber.c' object='tilda-key_grabber.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-key_grabber.o `test -f 'key_grabber.c' || echo '$(srcdir)/'`key_grabber.c

tilda-key_grabber.obj: key_grabber.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-key_grabber.obj -MD -MP -MF $(DEPDIR)/tilda-key_grabber.Tpo -c -o tilda-key_grabber.obj `if test -f 'key_grabber.c'; then $(CYGPATH_W) 'key_grabber.c'; else $(CYGPATH_W) '$(srcdir)/key_grabber.c'; fi`
	mv -f $(DEPDIR)/tilda-key_grabber.Tpo $(DEPDIR)/tilda-key_grabber.Po
#	source='key_grabber.c' object='tilda-key_grabber.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-key_grabber.obj `if test -f 'key_grabber.c'; then $(CYGPATH_W) 'key_grabber.c'; else $(CYGPATH_W) '$(srcdir)/key_grabber.c'; fi`

tilda-tilda.o: tilda.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tilda.o -MD -MP -MF $(DEPDIR)/tilda-tilda.Tpo -c -o tilda-tilda.o `test -f 'tilda.c' || echo '$(srcdir)/'`tilda.c
	mv -f $(DEPDIR)/tilda-tilda.Tpo $(DEPDIR)/tilda-tilda.Po
#	source='tilda.c' object='tilda-tilda.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tilda.o `test -f 'tilda.c' || echo '$(srcdir)/'`tilda.c

tilda-tilda.obj: tilda.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tilda.obj -MD -MP -MF $(DEPDIR)/tilda-tilda.Tpo -c -o tilda-tilda.obj `if test -f 'tilda.c'; then $(CYGPATH_W) 'tilda.c'; else $(CYGPATH_W) '$(srcdir)/tilda.c'; fi`
	mv -f $(DEPDIR)/tilda-tilda.Tpo $(DEPDIR)/tilda-tilda.Po
#	source='tilda.c' object='tilda-tilda.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tilda.obj `if test -f 'tilda.c'; then $(CYGPATH_W) 'tilda.c'; else $(CYGPATH_W) '$(srcdir)/tilda.c'; fi`

tilda-tilda_terminal.o: tilda_terminal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tilda_terminal.o -MD -MP -MF $(DEPDIR)/tilda-tilda_terminal.Tpo -c -o tilda-tilda_terminal.o `test -f 'tilda_terminal.c' || echo '$(srcdir)/'`tilda_terminal.c
	mv -f $(DEPDIR)/tilda-tilda_terminal.Tpo $(DEPDIR)/tilda-tilda_terminal.Po
#	source='tilda_terminal.c' object='tilda-tilda_terminal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tilda_terminal.o `test -f 'tilda_terminal.c' || echo '$(srcdir)/'`tilda_terminal.c

tilda-tilda_terminal.obj: tilda_terminal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tilda_terminal.obj -MD -MP -MF $(DEPDIR)/tilda-tilda_terminal.Tpo -c -o tilda-tilda_terminal.obj `if test -f 'tilda_terminal.c'; then $(CYGPATH_W) 'tilda_terminal.c'; else $(CYGPATH_W) '$(srcdir)/tilda_terminal.c'; fi`
	mv -f $(DEPDIR)/tilda-tilda_terminal.Tpo $(DEPDIR)/tilda-tilda_terminal.Po
#	source='tilda_terminal.c' object='tilda-tilda_terminal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tilda_terminal.obj `if test -f 'tilda_terminal.c'; then $(CYGPATH_W) 'tilda_terminal.c'; else $(CYGPATH_W) '$(srcdir)/tilda_terminal.c'; fi`

tilda-tilda_window.o: tilda_window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tilda_window.o -MD -MP -MF $(DEPDIR)/tilda-tilda_window.Tpo -c -o tilda-tilda_window.o `test -f 'tilda_window.c' || echo '$(srcdir)/'`tilda_window.c
	mv -f $(DEPDIR)/tilda-tilda_window.Tpo $(DEPDIR)/tilda-tilda_window.Po
#	source='tilda_window.c' object='tilda-tilda_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tilda_window.o `test -f 'tilda_window.c' || echo '$(srcdir)/'`tilda_window.c

tilda-tilda_window.obj: tilda_window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tilda_window.obj -MD -MP -MF $(DEPDIR)/tilda-tilda_window.Tpo -c -o tilda-tilda_window.obj `if test -f 'tilda_window.c'; then $(CYGPATH_W) 'tilda_window.c'; else $(CYGPATH_W) '$(srcdir)/tilda_window.c'; fi`
	mv -f $(DEPDIR)/tilda-tilda_window.Tpo $(DEPDIR)/tilda-tilda_window.Po
#	source='tilda_window.c' object='tilda-tilda_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tilda_window.obj `if test -f 'tilda_window.c'; then $(CYGPATH_W) 'tilda_window.c'; else $(CYGPATH_W) '$(srcdir)/tilda_window.c'; fi`

tilda-tomboykeybinder.o: tomboykeybinder.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tomboykeybinder.o -MD -MP -MF $(DEPDIR)/tilda-tomboykeybinder.Tpo -c -o tilda-tomboykeybinder.o `test -f 'tomboykeybinder.c' || echo '$(srcdir)/'`tomboykeybinder.c
	mv -f $(DEPDIR)/tilda-tomboykeybinder.Tpo $(DEPDIR)/tilda-tomboykeybinder.Po
#	source='tomboykeybinder.c' object='tilda-tomboykeybinder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tomboykeybinder.o `test -f 'tomboykeybinder.c' || echo '$(srcdir)/'`tomboykeybinder.c

tilda-tomboykeybinder.obj: tomboykeybinder.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-tomboykeybinder.obj -MD -MP -MF $(DEPDIR)/tilda-tomboykeybinder.Tpo -c -o tilda-tomboykeybinder.obj `if test -f 'tomboykeybinder.c'; then $(CYGPATH_W) 'tomboykeybinder.c'; else $(CYGPATH_W) '$(srcdir)/tomboykeybinder.c'; fi`
	mv -f $(DEPDIR)/tilda-tomboykeybinder.Tpo $(DEPDIR)/tilda-tomboykeybinder.Po
#	source='tomboykeybinder.c' object='tilda-tomboykeybinder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-tomboykeybinder.obj `if test -f 'tomboykeybinder.c'; then $(CYGPATH_W) 'tomboykeybinder.c'; else $(CYGPATH_W) '$(srcdir)/tomboykeybinder.c'; fi`

tilda-wizard.o: wizard.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-wizard.o -MD -MP -MF $(DEPDIR)/tilda-wizard.Tpo -c -o tilda-wizard.o `test -f 'wizard.c' || echo '$(srcdir)/'`wizard.c
	mv -f $(DEPDIR)/tilda-wizard.Tpo $(DEPDIR)/tilda-wizard.Po
#	source='wizard.c' object='tilda-wizard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-wizard.o `test -f 'wizard.c' || echo '$(srcdir)/'`wizard.c

tilda-wizard.obj: wizard.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-wizard.obj -MD -MP -MF $(DEPDIR)/tilda-wizard.Tpo -c -o tilda-wizard.obj `if test -f 'wizard.c'; then $(CYGPATH_W) 'wizard.c'; else $(CYGPATH_W) '$(srcdir)/wizard.c'; fi`
	mv -f $(DEPDIR)/tilda-wizard.Tpo $(DEPDIR)/tilda-wizard.Po
#	source='wizard.c' object='tilda-wizard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-wizard.obj `if test -f 'wizard.c'; then $(CYGPATH_W) 'wizard.c'; else $(CYGPATH_W) '$(srcdir)/wizard.c'; fi`

tilda-xerror.o: xerror.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-xerror.o -MD -MP -MF $(DEPDIR)/tilda-xerror.Tpo -c -o tilda-xerror.o `test -f 'xerror.c' || echo '$(srcdir)/'`xerror.c
	mv -f $(DEPDIR)/tilda-xerror.Tpo $(DEPDIR)/tilda-xerror.Po
#	source='xerror.c' object='tilda-xerror.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-xerror.o `test -f 'xerror.c' || echo '$(srcdir)/'`xerror.c

tilda-xerror.obj: xerror.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -MT tilda-xerror.obj -MD -MP -MF $(DEPDIR)/tilda-xerror.Tpo -c -o tilda-xerror.obj `if test -f 'xerror.c'; then $(CYGPATH_W) 'xerror.c'; else $(CYGPATH_W) '$(srcdir)/xerror.c'; fi`
	mv -f $(DEPDIR)/tilda-xerror.Tpo $(DEPDIR)/tilda-xerror.Po
#	source='xerror.c' object='tilda-xerror.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tilda_CFLAGS) $(CFLAGS) -c -o tilda-xerror.obj `if test -f 'xerror.c'; then $(CYGPATH_W) 'xerror.c'; else $(CYGPATH_W) '$(srcdir)/xerror.c'; fi`

.l.c:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


maintainer-clean-generic:
	-rm Makefile.in
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
